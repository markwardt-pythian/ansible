- hosts: localhost
  connection: local
  vars:
    region: "us-east-1"
  tasks:
    - name: Build VPC
      ec2_vpc_net:
        name: "markwardt-vpc"
        state: present
        cidr_block: 10.4.0.0/16
        region: "{{ region }}"

    - name: Get VPC ID
      ec2_vpc_net_facts:
        region: "{{ region }}"
        filters:
          "tag:Name": markwardt-vpc
      register: vpc_facts
  
    - name: VPC ID
      debug: 
        var: vpc_facts['vpcs'][0]['id']

    - name: Create subnet MySQL database servers 1
      ec2_vpc_subnet:
        state: present
        vpc_id: "{{ vpc_facts['vpcs'][0]['id'] }}"
        cidr: 10.4.1.0/24
        region: "{{ region }}"
        az: "us-east-1a"
        resource_tags:
          Name: markwardt-private1
      register: database_subnet1

    - name: subnet MySQL database servers ID 1
      debug: 
        var: database_subnet1['subnet']['id']

    - name: Create subnet MySQL database servers 2
      ec2_vpc_subnet:
        state: present
        vpc_id: "{{ vpc_facts['vpcs'][0]['id'] }}"
        cidr: 10.4.2.0/24
        region: "{{ region }}"
        az: "us-east-1b"
        resource_tags:
          Name: markwardt-private2
      register: database_subnet2

    - name: subnet MySQL database servers ID 2
      debug: 
        var: database_subnet2['subnet']['id']

    - name: Create subnet public test web servers
      ec2_vpc_subnet:
        state: present
        vpc_id: "{{ vpc_facts['vpcs'][0]['id'] }}"
        cidr: 10.4.0.0/24
        region: "{{ region }}"
        az: "us-east-1c"
        resource_tags:
          Name: markwardt-web
      register: web_subnet

    - name: Subnet public test web servers ID
      debug: 
        var: web_subnet['subnet']['id']

    - name: Create internet gateway    
      ec2_vpc_igw:
        vpc_id: "{{ vpc_facts['vpcs'][0]['id'] }}"
        state: present
        region: "{{ region }}"
      register: igw

    - name: Internet gateway ID
      debug: 
        var: igw['gateway_id']

    - name: Set up public subnet route table
      ec2_vpc_route_table:
        vpc_id: "{{ vpc_facts['vpcs'][0]['id'] }}"
        region: "{{ region }}"
        state: present
        tags:
          Name: markwardt-public
        subnets:
          - "{{ database_subnet1['subnet']['id'] }}"
          - "{{ database_subnet2['subnet']['id'] }}"
          - "{{ web_subnet['subnet']['id'] }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw['gateway_id'] }}"
      register: public_route_table

    - name: Bastion Security group
      ec2_group:
        name: markwardt-bastion
        state: present
        description: Security group for SSH Bastion to get into the servers
        vpc_id: "{{ vpc_facts['vpcs'][0]['id'] }}"
        region: "{{ region }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
      register: bastion_sg

    - name: Bastion Security group ID
      debug: 
        var: bastion_sg['group_id']

    - name: Web Security group
      ec2_group:
        name: markwardt-web
        state: present
        description: Security group for SSH Bastion to get into the servers
        vpc_id: "{{ vpc_facts['vpcs'][0]['id'] }}"
        region: "{{ region }}"
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 22
            to_port: 22
            group_id: "{{ bastion_sg['group_id'] }}"
      register: web_sg

    - name: Web Security group ID
      debug: 
        var: web_sg['group_id']

    - name: MySQL Security group
      ec2_group:
        name: markwardt-private
        state: present
        description: Security group for private access
        vpc_id: "{{ vpc_facts['vpcs'][0]['id'] }}"
        region: "{{ region }}"
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 22
            to_port: 22
            group_id: "{{ bastion_sg['group_id'] }}"
          - proto: tcp
            from_port: 3306
            to_port: 3306
            group_id: "{{ web_sg['group_id'] }}"
      register: mysql_sg

    - name: MySQL Security group ID
      debug: 
        var: mysql_sg['group_id']  

    







