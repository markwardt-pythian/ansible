- hosts: localhost
  connection: local
  vars:
    region: "us-east-1"
    ec2_id: "ami-22ce4934"
    key_pair: "pythian-markwardt"
    host_path: "../hosts"
    ssh_key_path: "/Users/kmarkwardt/.ssh/pythian-markwardt.pem"
  tasks:
    - name: "Start new HOSTS file"
      shell: "echo '[bastion]' > {{ host_path }}"

    - name: "Get Public Subnet ID"
      ec2_vpc_subnet_facts:
        region: "{{ region }}"
        filters:
          "tag:Name": markwardt-public
      register: markwardt_public

    - name: Subnet ID
      debug:
        var: markwardt_public['subnets'][0]['id']

    - name: Get web SG ID
      ec2_group_facts:
        region: "{{ region }}"
        filters:
          group-name: markwardt-web
      register: web_sg

    - name: Web SG ID
      debug:
        var: web_sg['security_groups'][0]['group_id']    

    - name: Get bastion SG ID
      ec2_group_facts:
        region: "{{ region }}"
        filters:
          group-name: markwardt-bastion
      register: bastion_sg

    - name: Bastion SG ID
      debug:
        var: bastion_sg['security_groups'][0]['group_id']

    - name: Create Bastion
      ec2:
        region: "{{ region }}"
        key_name: "{{ key_pair }}"
        group_id: "{{ bastion_sg['security_groups'][0]['group_id'] }}"
        instance_type: t2.micro
        image: "{{ ec2_id }}"
        wait: yes
        wait_timeout: 500
        exact_count: 1
        instance_tags:
          Name: markwardt-bastion
          Environment: Dev
        count_tag: 
          Name: markwardt-bastion
          Environment: Dev
        vpc_subnet_id: "{{ markwardt_public['subnets'][0]['id'] }}"
        assign_public_ip: yes
      register: bastion_facts
    
    - debug: "var=bastion_facts"

    - name: Add Bastion to hosts file
      set_fact: 
        bastion_public_ip: "{{ bastion_facts['instances'][0]['public_ip'] }}"
      when: bastion_facts['instances'] | length > 0
  
    - name: Add Bastion to hosts file
      set_fact: 
        bastion_public_ip: "{{ bastion_facts['tagged_instances'][0]['public_ip'] }}"
      when: bastion_facts['tagged_instances'] | length > 0

    - name: Add Bastion to hosts file
      shell: "echo 'bastion ansible_host={{ bastion_public_ip }} ansible_user=ec2-user' >> {{ host_path }};echo '' >> {{ host_path }}"

    - name: Copy SSH Key to Bastion
      shell: "scp -i {{ ssh_key_path }} {{ ssh_key_path }} ec2-user@{{bastion_public_ip }}:~/.ssh/"
    
    - name: Create Web
      ec2:
        region: "{{ region }}"
        key_name: "{{ key_pair }}"
        group_id: "{{ web_sg['security_groups'][0]['group_id'] }}"
        instance_type: t2.micro
        image: "{{ ec2_id }}"
        wait: yes
        wait_timeout: 500
        exact_count: 1
        instance_tags:
          Name: markwardt-web
          Environment: Dev
        count_tag: 
          Name: markwardt-web
          Environment: Dev
        vpc_subnet_id: "{{ markwardt_public['subnets'][0]['id'] }}"
        assign_public_ip: yes
      register: web_facts
    
    - name: Add Web Server to hosts file
      shell: "echo '[web]' >> {{ host_path }}; echo 'webserver ansible_host={{ web_facts['instances'][0]['private_ip'] }} ansible_port=22 ansible_user=ec2-user' >> {{ host_path }};echo '' >> {{ host_path }}"
      when: web_facts['instances'] | length > 0
    
    - name: Add Web Server to hosts file
      shell: "echo '[web]' >> {{ host_path }}; echo 'webserver ansible_host={{ web_facts['tagged_instances'][0]['private_ip'] }} ansible_port=22 ansible_user=ec2-user' >> {{ host_path }};echo '' >> {{ host_path }}"
      when: web_facts['tagged_instances'] | length > 0




   